$comment Generated by Amaranth $end
$date 2025-07-25 11:53:37.679845 $end
$timescale 1 fs $end
$scope module bench $end
$scope module top $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # sda $end
$var wire 1 $ i2c_pins__sda__oe $end
$var wire 1 % sda_i $end
$var wire 1 & scl $end
$var wire 1 ' i2c_pins__scl__oe $end
$var wire 1 ( scl_i $end
$var wire 1 ) i2c_pins__sda__i $end
$var wire 1 * i2c_pins__scl__i $end
$scope module i2c $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 $ i2c_pins__sda__oe $end
$var wire 1 ' i2c_pins__scl__oe $end
$var wire 1 ) i2c_pins__sda__i $end
$var wire 1 * i2c_pins__scl__i $end
$var wire 5 + bus__addr $end
$var wire 5 , bus__addr$1 $end
$var wire 8 - bus__r_data $end
$var wire 8 . bus__r_data$3 $end
$var wire 1 / bus__r_stb $end
$var wire 1 0 bus__r_stb$5 $end
$var wire 8 1 bus__w_data $end
$var wire 8 2 bus__w_data$7 $end
$var wire 1 3 bus__w_stb $end
$var wire 1 4 bus__w_stb$9 $end
$var wire 12 5 period_cyc $end
$var wire 12 6 data $end
$var wire 1 7 i2c_rst $end
$var wire 1 8 w_data $end
$var wire 1 9 w_stb $end
$var wire 1 : start $end
$var wire 1 ; w_data$16 $end
$var wire 1 < w_stb$17 $end
$var wire 1 = stop $end
$var wire 1 > w_data$19 $end
$var wire 1 ? w_stb$20 $end
$var wire 1 @ read $end
$var wire 1 A w_data$22 $end
$var wire 1 B w_stb$23 $end
$var wire 1 C w_data$24 $end
$var wire 1 D w_stb$25 $end
$var wire 1 E ack_i $end
$var wire 8 F data_i $end
$var wire 8 G w_data$28 $end
$var wire 1 H write $end
$var wire 1 I w_stb$30 $end
$var wire 8 J r_data $end
$var wire 8 K data_o $end
$var wire 1 L r_data$33 $end
$var wire 1 M busy $end
$var wire 1 N r_data$35 $end
$var wire 1 O ack_o $end
$scope module bridge $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 + bus__addr$1 $end
$var wire 8 . bus__r_data $end
$var wire 1 / bus__r_stb$5 $end
$var wire 8 1 bus__w_data$7 $end
$var wire 1 3 bus__w_stb$9 $end
$var wire 12 6 data $end
$var wire 1 8 w_data $end
$var wire 1 9 w_stb $end
$var wire 1 ; w_data$21 $end
$var wire 1 < w_stb$22 $end
$var wire 1 > w_data$23 $end
$var wire 1 ? w_stb$24 $end
$var wire 1 A w_data$25 $end
$var wire 1 B w_stb$26 $end
$var wire 1 C w_data$27 $end
$var wire 1 D w_stb$28 $end
$var wire 8 G w_data$31 $end
$var wire 1 I w_stb$32 $end
$var wire 8 J r_data $end
$var wire 1 L r_data$38 $end
$var wire 1 N r_data$39 $end
$var wire 5 P bus__addr $end
$var wire 8 Q bus__r_data$3 $end
$var wire 1 R bus__r_stb $end
$var wire 8 S bus__w_data $end
$var wire 1 T bus__w_stb $end
$var wire 12 U element__r_data $end
$var wire 1 V element__r_stb $end
$var wire 12 W element__w_data $end
$var wire 1 X element__w_stb $end
$var wire 5 Y element__w_data$17 $end
$var wire 1 Z element__w_stb$18 $end
$var wire 8 [ element__w_data$29 $end
$var wire 1 \ element__w_stb$30 $end
$var wire 8 ] element__r_data$33 $end
$var wire 1 ^ element__r_stb$34 $end
$var wire 2 _ element__r_data$36 $end
$var wire 1 ` element__r_stb$37 $end
$scope module action $end
$var wire 1 8 w_data $end
$var wire 1 9 w_stb $end
$var wire 1 ; w_data$14 $end
$var wire 1 < w_stb$15 $end
$var wire 1 > w_data$16 $end
$var wire 1 ? w_stb$17 $end
$var wire 1 A w_data$18 $end
$var wire 1 B w_stb$19 $end
$var wire 1 C w_data$20 $end
$var wire 1 D w_stb$21 $end
$var wire 5 Y element__w_data $end
$var wire 1 Z element__w_stb $end
$var wire 1 p port__w_data $end
$var wire 1 q port__w_stb $end
$var wire 1 r port__w_data$4 $end
$var wire 1 s port__w_stb$5 $end
$var wire 1 t port__w_data$6 $end
$var wire 1 u port__w_stb$7 $end
$var wire 1 v port__w_data$8 $end
$var wire 1 w port__w_stb$9 $end
$var wire 1 x port__w_data$10 $end
$var wire 1 y port__w_stb$11 $end
$scope module read_ack $end
$var wire 1 A w_data $end
$var wire 1 B w_stb $end
$var wire 1 v port__w_data $end
$var wire 1 w port__w_stb $end
$upscope $end
$scope module read_nack $end
$var wire 1 C w_data $end
$var wire 1 D w_stb $end
$var wire 1 x port__w_data $end
$var wire 1 y port__w_stb $end
$upscope $end
$scope module reset $end
$var wire 1 8 w_data $end
$var wire 1 9 w_stb $end
$var wire 1 p port__w_data $end
$var wire 1 q port__w_stb $end
$upscope $end
$scope module start $end
$var wire 1 ; w_data $end
$var wire 1 < w_stb $end
$var wire 1 r port__w_data $end
$var wire 1 s port__w_stb $end
$upscope $end
$scope module stop $end
$var wire 1 > w_data $end
$var wire 1 ? w_stb $end
$var wire 1 t port__w_data $end
$var wire 1 u port__w_stb $end
$upscope $end
$upscope $end
$scope module divider $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 12 6 data $end
$var wire 12 U element__r_data $end
$var wire 1 V element__r_stb $end
$var wire 12 W element__w_data $end
$var wire 1 X element__w_stb $end
$var wire 12 k port__r_data $end
$var wire 1 l port__r_stb $end
$var wire 12 m port__w_data $end
$var wire 1 n port__w_stb $end
$scope module val $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 12 6 data $end
$var wire 12 k port__r_data $end
$var wire 12 m port__w_data $end
$var wire 1 n port__w_stb $end
$var wire 12 o _storage $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 P bus__addr $end
$var wire 8 Q bus__r_data $end
$var wire 1 R bus__r_stb $end
$var wire 8 S bus__w_data $end
$var wire 1 T bus__w_stb $end
$var wire 12 U element__r_data $end
$var wire 1 V element__r_stb $end
$var wire 12 W element__w_data $end
$var wire 1 X element__w_stb$22 $end
$var wire 5 Y element__w_data$27 $end
$var wire 1 Z element__w_stb $end
$var wire 8 [ element__w_data$28 $end
$var wire 1 \ element__w_stb$17 $end
$var wire 8 ] element__r_data$10 $end
$var wire 1 ^ element__r_stb$9 $end
$var wire 2 _ element__r_data$12 $end
$var wire 1 ` element__r_stb$11 $end
$var wire 1 a r_shadow__0__r_en $end
$var wire 1 b r_shadow__0__w_en $end
$var wire 8 c r_shadow__0__data $end
$var wire 1 d r_shadow__1__r_en $end
$var wire 1 e r_shadow__1__w_en $end
$var wire 8 f r_shadow__1__data $end
$var wire 1 g w_shadow__0__w_en $end
$var wire 8 h w_shadow__0__data $end
$var wire 1 i w_shadow__1__w_en $end
$var wire 8 j w_shadow__1__data $end
$upscope $end
$scope module receive_data $end
$var wire 8 J r_data $end
$var wire 8 ] element__r_data $end
$var wire 1 ^ element__r_stb $end
$var wire 8 | port__r_data $end
$var wire 1 } port__r_stb $end
$scope module val $end
$var wire 8 J r_data $end
$var wire 8 | port__r_data $end
$var wire 1 } port__r_stb $end
$var wire 1 ~ r_stb $end
$upscope $end
$upscope $end
$scope module send_data $end
$var wire 8 G w_data $end
$var wire 1 I w_stb $end
$var wire 8 [ element__w_data $end
$var wire 1 \ element__w_stb $end
$var wire 8 z port__w_data $end
$var wire 1 { port__w_stb $end
$scope module val $end
$var wire 8 G w_data $end
$var wire 1 I w_stb $end
$var wire 8 z port__w_data $end
$var wire 1 { port__w_stb $end
$upscope $end
$upscope $end
$scope module status $end
$var wire 1 L r_data $end
$var wire 1 N r_data$7 $end
$var wire 2 _ element__r_data $end
$var wire 1 ` element__r_stb $end
$var wire 1 !! port__r_data $end
$var wire 1 "! port__r_stb $end
$var wire 1 #! port__r_data$4 $end
$var wire 1 $! port__r_stb$5 $end
$scope module ack $end
$var wire 1 N r_data $end
$var wire 1 #! port__r_data $end
$var wire 1 $! port__r_stb $end
$var wire 1 &! r_stb $end
$upscope $end
$scope module busy $end
$var wire 1 L r_data $end
$var wire 1 !! port__r_data $end
$var wire 1 "! port__r_stb $end
$var wire 1 %! r_stb $end
$upscope $end
$upscope $end
$upscope $end
$scope module i2c $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 $ i2c_pins__sda__oe $end
$var wire 1 ' i2c_pins__scl__oe $end
$var wire 1 ) i2c_pins__sda__i $end
$var wire 1 * i2c_pins__scl__i $end
$var wire 12 5 period_cyc $end
$var wire 1 7 i2c_rst $end
$var wire 1 : start $end
$var wire 1 = stop $end
$var wire 1 @ read $end
$var wire 1 E ack_i $end
$var wire 8 F data_i $end
$var wire 1 H write $end
$var wire 8 K data_o $end
$var wire 1 M busy $end
$var wire 1 O ack_o $end
$var wire 12 '! timer $end
$var wire 1 (! scl_o $end
$var wire 1 )! scl_i $end
$var string 1 *! fsm_state $end
$var wire 1 +! sda_i $end
$var wire 1 ,! sda_o $end
$var wire 8 -! w_shreg $end
$var wire 1 .! r_ack $end
$var wire 1 /! stb $end
$var wire 3 0! bitno $end
$var wire 8 1! r_shreg $end
$scope module bus $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 $ i2c_pins__sda__oe $end
$var wire 1 ' i2c_pins__scl__oe $end
$var wire 1 ) i2c_pins__sda__i $end
$var wire 1 * i2c_pins__scl__i $end
$var wire 1 7 i2c_rst $end
$var wire 1 (! scl_o $end
$var wire 1 )! scl_i $end
$var wire 1 +! sda_i $end
$var wire 1 ,! sda_o $end
$var wire 1 2! i2c_pins__scl__o $end
$var wire 1 3! i2c_pins__sda__o $end
$var wire 1 4! bus_sample $end
$var wire 1 5! scl_r $end
$var wire 1 6! bus_setup $end
$var wire 1 7! bus_start $end
$var wire 1 8! sda_r $end
$var wire 1 9! bus_stop $end
$scope module U$0 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 * i2c_pins__scl__i $end
$var wire 1 7 i2c_rst $end
$var wire 1 )! scl_i $end
$var wire 1 :! stage0 $end
$var wire 1 ;! stage1 $end
$upscope $end
$scope module U$1 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 ) i2c_pins__sda__i $end
$var wire 1 7 i2c_rst $end
$var wire 1 +! sda_i $end
$var wire 1 <! stage0 $end
$var wire 1 =! stage1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
1#
0$
1%
1&
0'
1(
1)
1*
b0 +
b0 ,
b0 -
b0 .
0/
00
b1 1
b1 2
13
14
b0 5
b0 6
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
b0 F
b0 G
0H
0I
b0 J
b0 K
1L
1M
0N
0O
b0 P
b0 Q
0R
b1 S
1T
b0 U
0V
b0 W
0X
b0 Y
0Z
b0 [
0\
b0 ]
0^
b1 _
0`
0a
0b
b0 c
0d
0e
b0 f
1g
b0 h
0i
b0 j
b0 k
0l
b0 m
0n
b0 o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
b0 z
0{
b0 |
0}
0~
1!!
0"!
0#!
0$!
0%!
0&!
b0 '!
1(!
1)!
sIDLE/0 *!
1+!
1,!
b0 -!
0.!
1/!
b0 0!
b0 1!
02!
03!
04!
15!
06!
07!
18!
09!
1:!
1;!
1<!
1=!
$end
#5000000000
1!
b1 h
0M
b1 W
b1 [
b1 Y
0L
b1 z
1p
b1 m
0!!
18
b1 G
b0 _
b1 F
b1 ,
b1 +
b1 P
1i
0g
b0 2
b0 1
b0 S
#10000000000
0!
#15000000000
1!
1X
1n
b10 ,
b10 +
b10 P
0i
#20000000000
0!
#25000000000
1!
b1 o
0X
b1 6
0n
b1 k
b1 5
b1 U
b11 ,
b11 +
b11 P
#30000000000
0!
#35000000000
1!
b1 '!
0/!
04
03
0T
#40000000000
0!
#45000000000
1!
b100 ,
b100 +
b100 P
b10 2
b10 1
b10 S
14
13
1T
1g
#50000000000
0!
#55000000000
1!
b10 h
1Z
1u
1y
b10 W
b10 Y
1s
1w
1q
b10 [
b10 z
1<
1B
1D
1r
19
0p
b10 m
1?
08
b10 G
1;
17
1:
07
b10 F
04
03
0T
0g
#60000000000
0!
#65000000000
1!
sSTART-SDA-L/1 *!
0Z
1M
0u
0y
1L
0s
0w
0q
0<
0B
0D
1!!
09
0?
0:
b1 _
b10000 ,
b10000 +
b10000 P
10
1/
1R
1`
1b
1$!
1"!
1&!
1%!
#70000000000
0!
#75000000000
1!
1a
b1 c
b0 '!
b1 Q
1/!
b1 .
b1 -
00
0/
0R
0`
0b
0$!
0"!
0&!
0%!
#80000000000
0!
#85000000000
1!
0a
sIDLE/0 *!
b1 '!
0,!
1$
0/!
b0 Q
0#
b0 .
0)
b0 -
#90000000000
0!
#95000000000
1!
0<!
b0 '!
0M
0L
1/!
0!!
b0 _
10
1/
1R
1`
1b
1$!
1"!
1&!
1%!
#100000000000
0!
#105000000000
1!
1a
b0 c
0=!
b1 '!
0+!
0/!
17!
00
0/
0R
0`
0b
0$!
0"!
0&!
0%!
b100 ,
b100 +
b100 P
b100 2
b100 1
b100 S
14
13
1T
1g
#110000000000
0!
#115000000000
1!
b100 h
0a
1Z
08!
1u
1y
b100 W
b100 Y
1s
07!
1w
1q
b100 [
b100 z
1<
1t
1B
0r
1D
19
b100 m
1?
b100 G
0;
1>
1:
0:
1=
b100 F
04
03
0T
0g
#120000000000
0!
#125000000000
1!
sSTOP-SDA-H/4 *!
0Z
1M
0u
0y
1L
0s
0w
0q
0<
0B
0D
1!!
09
0?
b1 _
0=
#130000000000
0!
#135000000000
1!
b0 '!
1/!
#140000000000
0!
#145000000000
1!
sIDLE/0 *!
b1 '!
1,!
0$
0/!
1#
1)
#150000000000
0!
#155000000000
1!
1<!
b0 '!
0M
0L
1/!
0!!
b0 _
b10000 ,
b10000 +
b10000 P
10
1/
1R
1`
1b
1$!
1"!
1&!
1%!
#160000000000
0!
#165000000000
1!
1a
1=!
b1 '!
1+!
0/!
19!
00
0/
0R
0`
0b
0$!
0"!
0&!
0%!
#170000000000
