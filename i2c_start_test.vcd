$comment Generated by Amaranth $end
$date 2025-08-06 20:06:50.207667 $end
$timescale 1 fs $end
$scope module bench $end
$scope module top $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # cov_assign_0 $end
$var wire 1 $ sda $end
$var wire 1 % i2c_pins__sda__oe $end
$var wire 1 & sda_i $end
$var wire 1 ' cov_assign_1 $end
$var wire 1 ( scl $end
$var wire 1 ) i2c_pins__scl__oe $end
$var wire 1 * scl_i $end
$var wire 1 + cov_assign_2 $end
$var wire 1 , i2c_pins__sda__i $end
$var wire 1 - cov_assign_3 $end
$var wire 1 . i2c_pins__scl__i $end
$scope module i2c $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 % i2c_pins__sda__oe $end
$var wire 1 ) i2c_pins__scl__oe $end
$var wire 1 , i2c_pins__sda__i $end
$var wire 1 . i2c_pins__scl__i $end
$var wire 5 / bus__addr $end
$var wire 5 0 bus__addr$1 $end
$var wire 8 1 bus__r_data $end
$var wire 8 2 bus__r_data$3 $end
$var wire 1 3 bus__r_stb $end
$var wire 1 4 bus__r_stb$5 $end
$var wire 8 5 bus__w_data $end
$var wire 8 6 bus__w_data$7 $end
$var wire 1 7 bus__w_stb $end
$var wire 1 8 bus__w_stb$9 $end
$var wire 12 9 period_cyc $end
$var wire 12 : data $end
$var wire 1 ; i2c_rst $end
$var wire 1 < w_data $end
$var wire 1 = w_stb $end
$var wire 1 > start $end
$var wire 1 ? w_data$16 $end
$var wire 1 @ w_stb$17 $end
$var wire 1 A stop $end
$var wire 1 B w_data$19 $end
$var wire 1 C w_stb$20 $end
$var wire 1 D read $end
$var wire 1 E w_data$22 $end
$var wire 1 F w_stb$23 $end
$var wire 1 G w_data$24 $end
$var wire 1 H w_stb$25 $end
$var wire 1 I ack_i $end
$var wire 8 J data_i $end
$var wire 8 K w_data$28 $end
$var wire 1 L write $end
$var wire 1 M w_stb$30 $end
$var wire 8 N r_data $end
$var wire 8 O data_o $end
$var wire 1 P r_data$33 $end
$var wire 1 Q busy $end
$var wire 1 R r_data$35 $end
$var wire 1 S ack_o $end
$scope module bridge $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 / bus__addr$1 $end
$var wire 8 2 bus__r_data $end
$var wire 1 3 bus__r_stb$5 $end
$var wire 8 5 bus__w_data$7 $end
$var wire 1 7 bus__w_stb$9 $end
$var wire 12 : data $end
$var wire 1 < w_data $end
$var wire 1 = w_stb $end
$var wire 1 ? w_data$21 $end
$var wire 1 @ w_stb$22 $end
$var wire 1 B w_data$23 $end
$var wire 1 C w_stb$24 $end
$var wire 1 E w_data$25 $end
$var wire 1 F w_stb$26 $end
$var wire 1 G w_data$27 $end
$var wire 1 H w_stb$28 $end
$var wire 8 K w_data$31 $end
$var wire 1 M w_stb$32 $end
$var wire 8 N r_data $end
$var wire 1 P r_data$38 $end
$var wire 1 R r_data$39 $end
$var wire 5 T bus__addr $end
$var wire 8 U bus__r_data$3 $end
$var wire 1 V bus__r_stb $end
$var wire 8 W bus__w_data $end
$var wire 1 X bus__w_stb $end
$var wire 12 Y element__r_data $end
$var wire 1 Z element__r_stb $end
$var wire 12 [ element__w_data $end
$var wire 1 \ element__w_stb $end
$var wire 5 ] element__w_data$17 $end
$var wire 1 ^ element__w_stb$18 $end
$var wire 8 _ element__w_data$29 $end
$var wire 1 ` element__w_stb$30 $end
$var wire 8 a element__r_data$33 $end
$var wire 1 b element__r_stb$34 $end
$var wire 2 c element__r_data$36 $end
$var wire 1 d element__r_stb$37 $end
$scope module action $end
$var wire 1 < w_data $end
$var wire 1 = w_stb $end
$var wire 1 ? w_data$14 $end
$var wire 1 @ w_stb$15 $end
$var wire 1 B w_data$16 $end
$var wire 1 C w_stb$17 $end
$var wire 1 E w_data$18 $end
$var wire 1 F w_stb$19 $end
$var wire 1 G w_data$20 $end
$var wire 1 H w_stb$21 $end
$var wire 5 ] element__w_data $end
$var wire 1 ^ element__w_stb $end
$var wire 1 t port__w_data $end
$var wire 1 u port__w_stb $end
$var wire 1 v port__w_data$4 $end
$var wire 1 w port__w_stb$5 $end
$var wire 1 x port__w_data$6 $end
$var wire 1 y port__w_stb$7 $end
$var wire 1 z port__w_data$8 $end
$var wire 1 { port__w_stb$9 $end
$var wire 1 | port__w_data$10 $end
$var wire 1 } port__w_stb$11 $end
$scope module read_ack $end
$var wire 1 E w_data $end
$var wire 1 F w_stb $end
$var wire 1 z port__w_data $end
$var wire 1 { port__w_stb $end
$upscope $end
$scope module read_nack $end
$var wire 1 G w_data $end
$var wire 1 H w_stb $end
$var wire 1 | port__w_data $end
$var wire 1 } port__w_stb $end
$upscope $end
$scope module reset $end
$var wire 1 < w_data $end
$var wire 1 = w_stb $end
$var wire 1 t port__w_data $end
$var wire 1 u port__w_stb $end
$upscope $end
$scope module start $end
$var wire 1 ? w_data $end
$var wire 1 @ w_stb $end
$var wire 1 v port__w_data $end
$var wire 1 w port__w_stb $end
$upscope $end
$scope module stop $end
$var wire 1 B w_data $end
$var wire 1 C w_stb $end
$var wire 1 x port__w_data $end
$var wire 1 y port__w_stb $end
$upscope $end
$upscope $end
$scope module divider $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 12 : data $end
$var wire 12 Y element__r_data $end
$var wire 1 Z element__r_stb $end
$var wire 12 [ element__w_data $end
$var wire 1 \ element__w_stb $end
$var wire 12 o port__r_data $end
$var wire 1 p port__r_stb $end
$var wire 12 q port__w_data $end
$var wire 1 r port__w_stb $end
$scope module val $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 12 : data $end
$var wire 12 o port__r_data $end
$var wire 12 q port__w_data $end
$var wire 1 r port__w_stb $end
$var wire 12 s _storage $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 T bus__addr $end
$var wire 8 U bus__r_data $end
$var wire 1 V bus__r_stb $end
$var wire 8 W bus__w_data $end
$var wire 1 X bus__w_stb $end
$var wire 12 Y element__r_data $end
$var wire 1 Z element__r_stb $end
$var wire 12 [ element__w_data $end
$var wire 1 \ element__w_stb$22 $end
$var wire 5 ] element__w_data$27 $end
$var wire 1 ^ element__w_stb $end
$var wire 8 _ element__w_data$28 $end
$var wire 1 ` element__w_stb$17 $end
$var wire 8 a element__r_data$10 $end
$var wire 1 b element__r_stb$9 $end
$var wire 2 c element__r_data$12 $end
$var wire 1 d element__r_stb$11 $end
$var wire 1 e r_shadow__0__r_en $end
$var wire 1 f r_shadow__0__w_en $end
$var wire 8 g r_shadow__0__data $end
$var wire 1 h r_shadow__1__r_en $end
$var wire 1 i r_shadow__1__w_en $end
$var wire 8 j r_shadow__1__data $end
$var wire 1 k w_shadow__0__w_en $end
$var wire 8 l w_shadow__0__data $end
$var wire 1 m w_shadow__1__w_en $end
$var wire 8 n w_shadow__1__data $end
$upscope $end
$scope module receive_data $end
$var wire 8 N r_data $end
$var wire 8 a element__r_data $end
$var wire 1 b element__r_stb $end
$var wire 8 "! port__r_data $end
$var wire 1 #! port__r_stb $end
$scope module val $end
$var wire 8 N r_data $end
$var wire 8 "! port__r_data $end
$var wire 1 #! port__r_stb $end
$var wire 1 $! r_stb $end
$upscope $end
$upscope $end
$scope module send_data $end
$var wire 8 K w_data $end
$var wire 1 M w_stb $end
$var wire 8 _ element__w_data $end
$var wire 1 ` element__w_stb $end
$var wire 8 ~ port__w_data $end
$var wire 1 !! port__w_stb $end
$scope module val $end
$var wire 8 K w_data $end
$var wire 1 M w_stb $end
$var wire 8 ~ port__w_data $end
$var wire 1 !! port__w_stb $end
$upscope $end
$upscope $end
$scope module status $end
$var wire 1 P r_data $end
$var wire 1 R r_data$7 $end
$var wire 2 c element__r_data $end
$var wire 1 d element__r_stb $end
$var wire 1 %! port__r_data $end
$var wire 1 &! port__r_stb $end
$var wire 1 '! port__r_data$4 $end
$var wire 1 (! port__r_stb$5 $end
$scope module ack $end
$var wire 1 R r_data $end
$var wire 1 '! port__r_data $end
$var wire 1 (! port__r_stb $end
$var wire 1 *! r_stb $end
$upscope $end
$scope module busy $end
$var wire 1 P r_data $end
$var wire 1 %! port__r_data $end
$var wire 1 &! port__r_stb $end
$var wire 1 )! r_stb $end
$upscope $end
$upscope $end
$upscope $end
$scope module i2c $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 % i2c_pins__sda__oe $end
$var wire 1 ) i2c_pins__scl__oe $end
$var wire 1 , i2c_pins__sda__i $end
$var wire 1 . i2c_pins__scl__i $end
$var wire 12 9 period_cyc $end
$var wire 1 ; i2c_rst $end
$var wire 1 > start $end
$var wire 1 A stop $end
$var wire 1 D read $end
$var wire 1 I ack_i $end
$var wire 8 J data_i $end
$var wire 1 L write $end
$var wire 8 O data_o $end
$var wire 1 Q busy $end
$var wire 1 S ack_o $end
$var wire 12 +! timer $end
$var wire 1 ,! scl_o $end
$var wire 1 -! scl_i $end
$var string 1 .! fsm_state $end
$var wire 1 /! sda_i $end
$var wire 1 0! sda_o $end
$var wire 8 1! w_shreg $end
$var wire 1 2! r_ack $end
$var wire 1 3! stb $end
$var wire 3 4! bitno $end
$var wire 8 5! r_shreg $end
$scope module bus $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 % i2c_pins__sda__oe $end
$var wire 1 ) i2c_pins__scl__oe $end
$var wire 1 , i2c_pins__sda__i $end
$var wire 1 . i2c_pins__scl__i $end
$var wire 1 ; i2c_rst $end
$var wire 1 ,! scl_o $end
$var wire 1 -! scl_i $end
$var wire 1 /! sda_i $end
$var wire 1 0! sda_o $end
$var wire 1 6! i2c_pins__scl__o $end
$var wire 1 7! i2c_pins__sda__o $end
$var wire 1 8! bus_sample $end
$var wire 1 9! scl_r $end
$var wire 1 :! bus_setup $end
$var wire 1 ;! bus_start $end
$var wire 1 <! sda_r $end
$var wire 1 =! bus_stop $end
$scope module U$0 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 . i2c_pins__scl__i $end
$var wire 1 ; i2c_rst $end
$var wire 1 -! scl_i $end
$var wire 1 >! stage0 $end
$var wire 1 ?! stage1 $end
$upscope $end
$scope module U$1 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 , i2c_pins__sda__i $end
$var wire 1 ; i2c_rst $end
$var wire 1 /! sda_i $end
$var wire 1 @! stage0 $end
$var wire 1 A! stage1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
1#
1$
0%
1&
1'
1(
0)
1*
1+
1,
1-
1.
b0 /
b0 0
b0 1
b0 2
03
04
b1 5
b1 6
17
18
b0 9
b0 :
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
b0 J
b0 K
0L
0M
b0 N
b0 O
1P
1Q
0R
0S
b0 T
b0 U
0V
b1 W
1X
b0 Y
0Z
b0 [
0\
b0 ]
0^
b0 _
0`
b0 a
0b
b1 c
0d
0e
0f
b0 g
0h
0i
b0 j
1k
b0 l
0m
b0 n
b0 o
0p
b0 q
0r
b0 s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
b0 ~
0!!
b0 "!
0#!
0$!
1%!
0&!
0'!
0(!
0)!
0*!
b0 +!
1,!
1-!
sIDLE/0 .!
1/!
10!
b0 1!
02!
13!
b0 4!
b0 5!
06!
07!
08!
19!
0:!
0;!
1<!
0=!
1>!
1?!
1@!
1A!
$end
#5000000000
1!
b1 l
0Q
b1 [
b1 ]
b1 _
0P
0%!
b1 q
1t
b1 ~
1<
b0 c
b1 K
b1 J
b1 0
b1 /
b1 T
0k
1m
b0 6
b0 5
b0 W
#10000000000
0!
#15000000000
1!
1\
1r
b10 0
b10 /
b10 T
0m
#20000000000
0!
#25000000000
1!
b1 s
0\
0r
b1 :
b1 o
b1 Y
b1 9
b11 0
b11 /
b11 T
#30000000000
0!
#35000000000
1!
b1 +!
03!
08
07
0X
#40000000000
0!
#45000000000
1!
b100 0
b100 /
b100 T
b10 6
b10 5
b10 W
18
17
1X
1k
#50000000000
0!
#55000000000
1!
b10 l
1^
b10 ]
1y
1u
b10 _
1{
b10 [
1}
1w
1H
1@
1C
b10 q
b10 ~
0t
1=
1F
1v
0<
1;
b10 K
1?
1>
0;
b10 J
08
07
0X
0k
#60000000000
0!
#65000000000
1!
sSTART-SDA-L/1 .!
0^
1Q
0y
0u
1P
0{
0}
0w
0H
0@
1%!
0C
0=
0F
0>
b1 c
b10000 0
b10000 /
b10000 T
14
13
1V
1d
1&!
1(!
1f
1*!
1)!
#70000000000
0!
#75000000000
1!
1e
b0 +!
b1 g
13!
b1 U
b1 2
b1 1
04
03
0V
0d
0&!
0(!
0f
0*!
0)!
#80000000000
0!
#85000000000
1!
sIDLE/0 .!
00!
b1 +!
0e
03!
b0 U
1%
b0 2
0$
b0 1
0,
#90000000000
0!
#95000000000
1!
0@!
b0 +!
0Q
13!
0P
0%!
b0 c
14
13
1V
1d
1&!
1(!
1f
1*!
1)!
#100000000000
0!
#105000000000
1!
1e
b1 +!
0A!
b0 g
0/!
03!
1;!
04
03
0V
0d
0&!
0(!
0f
0*!
0)!
b100 0
b100 /
b100 T
b100 6
b100 5
b100 W
18
17
1X
1k
#110000000000
0!
#115000000000
1!
b100 l
1^
0e
0<!
b100 ]
1y
1u
b100 _
0;!
1{
b100 [
1}
1w
1H
1@
1C
b100 q
b100 ~
1=
1F
0v
1x
1B
1>
b100 K
0?
0>
b100 J
1A
08
07
0X
0k
#120000000000
0!
#125000000000
1!
sSTOP-SDA-H/4 .!
0^
1Q
0y
0u
1P
0{
0}
0w
0H
0@
1%!
0C
0=
0F
b1 c
0A
#130000000000
0!
#135000000000
1!
b0 +!
13!
#140000000000
0!
#145000000000
1!
sIDLE/0 .!
10!
b1 +!
03!
0%
1$
1,
#150000000000
0!
#155000000000
1!
1@!
b0 +!
0Q
13!
0P
0%!
b0 c
b10000 0
b10000 /
b10000 T
14
13
1V
1d
1&!
1(!
1f
1*!
1)!
#160000000000
0!
#165000000000
1!
1e
b1 +!
1A!
1/!
03!
1=!
04
03
0V
0d
0&!
0(!
0f
0*!
0)!
#170000000000
