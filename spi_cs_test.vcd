$comment Generated by Amaranth $end
$date 2025-08-01 19:43:16.777993 $end
$timescale 1 fs $end
$scope module bench $end
$scope module top $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 # bus__addr $end
$var wire 5 $ bus__addr$3 $end
$var wire 8 % bus__r_data $end
$var wire 8 & bus__r_data$5 $end
$var wire 1 ' bus__r_stb $end
$var wire 1 ( bus__r_stb$7 $end
$var wire 8 ) bus__w_data $end
$var wire 8 * bus__w_data$9 $end
$var wire 1 + bus__w_stb $end
$var wire 1 , bus__w_stb$11 $end
$var wire 1 - spi__cipo__i $end
$var wire 1 . spi_pins__cipo__i $end
$var wire 1 / spi_pins__copi__o $end
$var wire 1 0 spi__copi__o $end
$var wire 1 1 spi_pins__csn__o $end
$var wire 1 2 spi__csn__o $end
$var wire 1 3 spi_pins__sck__o $end
$var wire 1 4 spi__sck__o $end
$var wire 1 5 sck_idle $end
$var wire 1 6 data $end
$var wire 1 7 sck_edge $end
$var wire 1 8 data$23 $end
$var wire 1 9 cs $end
$var wire 1 : data$25 $end
$var wire 5 ; width $end
$var wire 5 < data$27 $end
$var wire 8 = divider $end
$var wire 8 > data$29 $end
$var wire 1 ? start_xfer $end
$var wire 1 @ w_stb $end
$var wire 32 A d_send $end
$var wire 32 B w_data $end
$var wire 32 C r_data $end
$var wire 32 D d_recv $end
$var wire 1 E r_stb $end
$var wire 1 F done $end
$var wire 1 G r_data$38 $end
$scope module bridge $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 # bus__addr$1 $end
$var wire 8 & bus__r_data $end
$var wire 1 ' bus__r_stb$5 $end
$var wire 8 ) bus__w_data$7 $end
$var wire 1 + bus__w_stb$9 $end
$var wire 1 6 data $end
$var wire 1 8 data$17 $end
$var wire 1 : data$18 $end
$var wire 5 < data$19 $end
$var wire 8 > data$24 $end
$var wire 1 @ w_stb $end
$var wire 32 B w_data $end
$var wire 32 C r_data $end
$var wire 1 E r_stb $end
$var wire 1 G r_data$35 $end
$var wire 5 H bus__addr $end
$var wire 8 I bus__r_data$3 $end
$var wire 1 J bus__r_stb $end
$var wire 8 K bus__w_data $end
$var wire 1 L bus__w_stb $end
$var wire 8 M element__r_data $end
$var wire 1 N element__r_stb $end
$var wire 8 O element__w_data $end
$var wire 1 P element__w_stb $end
$var wire 8 Q element__r_data$20 $end
$var wire 1 R element__r_stb$21 $end
$var wire 8 S element__w_data$22 $end
$var wire 1 T element__w_stb$23 $end
$var wire 32 U element__w_data$25 $end
$var wire 1 V element__w_stb$26 $end
$var wire 32 W element__r_data$29 $end
$var wire 1 X element__r_stb$30 $end
$var wire 1 Y element__r_data$33 $end
$var wire 1 Z element__r_stb$34 $end
$scope module config $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 6 data $end
$var wire 1 8 data$23 $end
$var wire 1 : data$24 $end
$var wire 5 < data$25 $end
$var wire 8 M element__r_data $end
$var wire 1 N element__r_stb $end
$var wire 8 O element__w_data $end
$var wire 1 P element__w_stb $end
$var wire 1 o port__r_data $end
$var wire 1 p port__r_stb $end
$var wire 1 q port__w_data $end
$var wire 1 r port__w_stb $end
$var wire 1 s port__r_data$8 $end
$var wire 1 t port__r_stb$9 $end
$var wire 1 u port__w_data$10 $end
$var wire 1 v port__w_stb$11 $end
$var wire 1 w port__r_data$12 $end
$var wire 1 x port__r_stb$13 $end
$var wire 1 y port__w_data$14 $end
$var wire 1 z port__w_stb$15 $end
$var wire 5 { port__r_data$16 $end
$var wire 1 | port__r_stb$17 $end
$var wire 5 } port__w_data$18 $end
$var wire 1 ~ port__w_stb$19 $end
$scope module chip_select $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 : data $end
$var wire 1 w port__r_data $end
$var wire 1 y port__w_data $end
$var wire 1 z port__w_stb $end
$var wire 1 #! _storage $end
$upscope $end
$scope module sck_edge $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 8 data $end
$var wire 1 s port__r_data $end
$var wire 1 u port__w_data $end
$var wire 1 v port__w_stb $end
$var wire 1 "! _storage $end
$upscope $end
$scope module sck_idle $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 6 data $end
$var wire 1 o port__r_data $end
$var wire 1 q port__w_data $end
$var wire 1 r port__w_stb $end
$var wire 1 !! _storage $end
$upscope $end
$scope module width $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 < data $end
$var wire 5 { port__r_data $end
$var wire 5 } port__w_data $end
$var wire 1 ~ port__w_stb $end
$var wire 5 $! _storage $end
$upscope $end
$upscope $end
$scope module divider $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 8 > data $end
$var wire 8 Q element__r_data $end
$var wire 1 R element__r_stb $end
$var wire 8 S element__w_data $end
$var wire 1 T element__w_stb $end
$var wire 8 %! port__r_data $end
$var wire 1 &! port__r_stb $end
$var wire 8 '! port__w_data $end
$var wire 1 (! port__w_stb $end
$scope module val $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 8 > data $end
$var wire 8 %! port__r_data $end
$var wire 8 '! port__w_data $end
$var wire 1 (! port__w_stb $end
$var wire 8 )! _storage $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 5 H bus__addr $end
$var wire 8 I bus__r_data $end
$var wire 1 J bus__r_stb $end
$var wire 8 K bus__w_data $end
$var wire 1 L bus__w_stb $end
$var wire 8 M element__r_data $end
$var wire 1 N element__r_stb $end
$var wire 8 O element__w_data $end
$var wire 1 P element__w_stb $end
$var wire 8 Q element__r_data$10 $end
$var wire 1 R element__r_stb$9 $end
$var wire 8 S element__w_data$39 $end
$var wire 1 T element__w_stb$25 $end
$var wire 32 U element__w_data$40 $end
$var wire 1 V element__w_stb$34 $end
$var wire 32 W element__r_data$12 $end
$var wire 1 X element__r_stb$11 $end
$var wire 1 Y element__r_data$14 $end
$var wire 1 Z element__r_stb$13 $end
$var wire 1 [ r_shadow__0__r_en $end
$var wire 1 \ r_shadow__0__w_en $end
$var wire 8 ] r_shadow__0__data $end
$var wire 1 ^ r_shadow__1__r_en $end
$var wire 1 _ r_shadow__1__w_en $end
$var wire 8 ` r_shadow__1__data $end
$var wire 1 a r_shadow__2__r_en $end
$var wire 1 b r_shadow__2__w_en $end
$var wire 8 c r_shadow__2__data $end
$var wire 1 d r_shadow__3__r_en $end
$var wire 1 e r_shadow__3__w_en $end
$var wire 8 f r_shadow__3__data $end
$var wire 1 g w_shadow__0__w_en $end
$var wire 8 h w_shadow__0__data $end
$var wire 1 i w_shadow__1__w_en $end
$var wire 8 j w_shadow__1__data $end
$var wire 1 k w_shadow__2__w_en $end
$var wire 8 l w_shadow__2__data $end
$var wire 1 m w_shadow__3__w_en $end
$var wire 8 n w_shadow__3__data $end
$upscope $end
$scope module receive_data $end
$var wire 32 C r_data $end
$var wire 1 E r_stb $end
$var wire 32 W element__r_data $end
$var wire 1 X element__r_stb $end
$var wire 32 ,! port__r_data $end
$var wire 1 -! port__r_stb $end
$scope module val $end
$var wire 32 C r_data $end
$var wire 1 E r_stb $end
$var wire 32 ,! port__r_data $end
$var wire 1 -! port__r_stb $end
$upscope $end
$upscope $end
$scope module send_data $end
$var wire 1 @ w_stb $end
$var wire 32 B w_data $end
$var wire 32 U element__w_data $end
$var wire 1 V element__w_stb $end
$var wire 32 *! port__w_data $end
$var wire 1 +! port__w_stb $end
$scope module val $end
$var wire 1 @ w_stb $end
$var wire 32 B w_data $end
$var wire 32 *! port__w_data $end
$var wire 1 +! port__w_stb $end
$upscope $end
$upscope $end
$scope module status $end
$var wire 1 G r_data $end
$var wire 1 Y element__r_data $end
$var wire 1 Z element__r_stb $end
$var wire 1 .! port__r_data $end
$var wire 1 /! port__r_stb $end
$scope module recv_full $end
$var wire 1 G r_data $end
$var wire 1 .! port__r_data $end
$var wire 1 /! port__r_stb $end
$var wire 1 0! r_stb $end
$upscope $end
$upscope $end
$upscope $end
$scope module spi $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 - spi__cipo__i $end
$var wire 1 0 spi__copi__o $end
$var wire 1 2 spi__csn__o $end
$var wire 1 4 spi__sck__o $end
$var wire 1 5 sck_idle $end
$var wire 1 7 sck_edge $end
$var wire 1 9 cs $end
$var wire 5 ; width $end
$var wire 8 = divider $end
$var wire 1 ? start_xfer $end
$var wire 32 A d_send $end
$var wire 32 D d_recv $end
$var wire 1 F done $end
$var wire 1 1! sck $end
$var string 1 2! fsm_state $end
$var wire 8 3! div_ctr $end
$var wire 1 4! setup $end
$var wire 1 5! latch $end
$var wire 1 6! busy $end
$var wire 32 7! sr_i $end
$var wire 32 8! sr_o $end
$var wire 6 9! bit_count $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
b0 #
b0 $
b0 %
b0 &
0'
0(
b100 )
b100 *
1+
1,
0-
0.
0/
00
11
12
03
04
05
06
07
08
09
0:
b0 ;
b0 <
b0 =
b0 >
0?
0@
b0 A
b0 B
b0 C
b0 D
0E
0F
0G
b0 H
b0 I
0J
b100 K
1L
b0 M
0N
b0 O
0P
b0 Q
0R
b0 S
0T
b0 U
0V
b0 W
0X
0Y
0Z
0[
0\
b0 ]
0^
0_
b0 `
0a
0b
b0 c
0d
0e
b0 f
1g
b0 h
0i
b0 j
0k
b0 l
0m
b0 n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
b0 {
0|
b0 }
0~
0!!
0"!
0#!
b0 $!
b0 %!
0&!
b0 '!
0(!
b0 )!
b0 *!
0+!
b0 ,!
0-!
0.!
0/!
00!
01!
sIDLE/0 2!
b0 3!
04!
05!
06!
b0 7!
b0 8!
b0 9!
$end
#5000000000
1!
b100 h
1P
b100 O
1v
1r
1~
b100 U
b100 S
1z
b100 *!
b100 '!
1y
b100 B
b100 A
0,
0+
0L
0g
#10000000000
0!
#15000000000
1!
1#!
0P
1:
0v
1w
0~
0r
0z
b100 M
19
02
01
b0 *
b0 )
b0 K
1,
1+
1L
1g
#20000000000
0!
#25000000000
1!
b0 h
1P
b0 O
1v
1r
1~
b0 U
b0 S
1z
b0 *!
b0 '!
0y
b0 B
b0 A
0,
0+
0L
0g
#30000000000
0!
#35000000000
1!
0#!
0P
0:
0v
0w
0~
0r
0z
b0 M
09
12
11
#40000000000
