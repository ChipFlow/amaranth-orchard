$comment Generated by Amaranth $end
$date 2025-07-25 11:53:37.770263 $end
$timescale 1 fs $end
$scope module bench $end
$scope module top $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 16 # divisor $end
$var wire 16 $ spi_bus__divisor $end
$var wire 8 % spi_bus__i_octets__payload $end
$var wire 8 & \spi_bus__i_octets__payload.data $end
$var wire 8 ' i_octets__payload $end
$var wire 8 ( \i_octets__payload.data $end
$var wire 1 ) i_octets__ready $end
$var wire 1 * spi_bus__i_octets__ready $end
$var wire 1 + spi_bus__i_octets__valid $end
$var wire 1 , i_octets__valid $end
$var wire 12 - o_octets__payload $end
$var wire 1 . \o_octets__payload.chip $end
$var string 1 / \o_octets__payload.mode $end
$var wire 8 0 \o_octets__payload.data $end
$var wire 12 1 spi_bus__o_octets__payload $end
$var wire 1 2 \spi_bus__o_octets__payload.chip $end
$var string 1 3 \spi_bus__o_octets__payload.mode $end
$var wire 8 4 \spi_bus__o_octets__payload.data $end
$var wire 1 5 spi_bus__o_octets__ready $end
$var wire 1 6 o_octets__ready $end
$var wire 1 7 o_octets__valid $end
$var wire 1 8 spi_bus__o_octets__valid $end
$scope module dut $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 8 % spi_bus__i_octets__payload $end
$var wire 8 & \spi_bus__i_octets__payload.data $end
$var wire 1 * spi_bus__i_octets__ready $end
$var wire 1 + spi_bus__i_octets__valid $end
$var wire 12 1 spi_bus__o_octets__payload $end
$var wire 1 2 \spi_bus__o_octets__payload.chip $end
$var string 1 3 \spi_bus__o_octets__payload.mode $end
$var wire 8 4 \spi_bus__o_octets__payload.data $end
$var wire 1 5 spi_bus__o_octets__ready $end
$var wire 1 8 spi_bus__o_octets__valid $end
$var wire 4 9 bus__addr $end
$var wire 4 : csr_bus__addr $end
$var wire 8 ; csr_bus__r_data $end
$var wire 8 < bus__r_data $end
$var wire 1 = bus__r_stb $end
$var wire 1 > csr_bus__r_stb $end
$var wire 8 ? bus__w_data $end
$var wire 8 @ csr_bus__w_data $end
$var wire 1 A bus__w_stb $end
$var wire 1 B csr_bus__w_stb $end
$var string 1 C data $end
$var string 1 D o_command $end
$var string 1 E o_mode $end
$var string 1 F i_mode $end
$var wire 8 G r_data $end
$var wire 8 H raw_rx_data $end
$var wire 1 I r_data$16 $end
$var string 1 J fsm_state $end
$var wire 1 K data$19 $end
$var wire 1 L wb_bus__cyc $end
$var wire 1 M wb_bus__stb $end
$var wire 1 N wb_bus__we $end
$var wire 24 O wb_bus__adr $end
$var wire 2 P o_addr_count $end
$var wire 3 Q o_data_count $end
$var wire 8 R raw_tx_data $end
$var wire 2 S data$32 $end
$var wire 2 T o_dummy_count $end
$var wire 32 U wb_bus__dat_r $end
$var wire 3 V i_data_count $end
$var wire 1 W wb_bus__ack $end
$var wire 1 X w_stb $end
$var wire 1 Y w_data $end
$var wire 1 Z w_stb$41 $end
$var wire 8 [ data$42 $end
$scope module csr_bridge $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 4 9 bus__addr$1 $end
$var wire 8 < bus__r_data $end
$var wire 1 = bus__r_stb$5 $end
$var wire 8 ? bus__w_data$7 $end
$var wire 1 A bus__w_stb$9 $end
$var string 1 C data$17 $end
$var wire 8 G r_data$34 $end
$var wire 1 I r_data $end
$var wire 1 K data $end
$var wire 2 S data$18 $end
$var wire 1 X w_stb $end
$var wire 1 Y w_data $end
$var wire 1 Z w_stb$30 $end
$var wire 8 [ data$31 $end
$var wire 4 \ bus__addr $end
$var wire 8 ] bus__r_data$3 $end
$var wire 1 ^ bus__r_stb $end
$var wire 8 _ bus__w_data $end
$var wire 1 ` bus__w_stb $end
$var wire 5 a element__r_data $end
$var wire 1 b element__r_stb $end
$var wire 5 c element__w_data $end
$var wire 1 d element__w_stb $end
$var wire 2 e element__r_data$19 $end
$var wire 1 f element__r_stb$20 $end
$var wire 2 g element__w_data$21 $end
$var wire 1 h element__w_stb$22 $end
$var wire 8 i element__r_data$26 $end
$var wire 1 j element__r_stb$27 $end
$var wire 8 k element__w_data$28 $end
$var wire 1 l element__w_stb$29 $end
$var wire 8 m element__r_data$32 $end
$var wire 1 n element__r_stb$33 $end
$scope module Config $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var string 1 C data$19 $end
$var wire 1 K data $end
$var wire 2 S data$20 $end
$var wire 5 a element__r_data $end
$var wire 1 b element__r_stb $end
$var wire 5 c element__w_data $end
$var wire 1 d element__w_stb $end
$var wire 1 v port__r_data $end
$var wire 1 w port__r_stb $end
$var wire 1 x port__w_data $end
$var wire 1 y port__w_stb $end
$var wire 2 z port__r_data$8 $end
$var wire 1 { port__r_stb$9 $end
$var wire 2 | port__w_data$10 $end
$var wire 1 } port__w_stb$11 $end
$var wire 2 ~ port__r_data$12 $end
$var wire 1 !! port__r_stb$13 $end
$var wire 2 "! port__w_data$14 $end
$var wire 1 #! port__w_stb$15 $end
$scope module dummy_bytes $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 2 S data $end
$var wire 2 ~ port__r_data $end
$var wire 2 "! port__w_data $end
$var wire 1 #! port__w_stb $end
$var wire 2 &! _storage $end
$upscope $end
$scope module raw_enable $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 K data $end
$var wire 1 v port__r_data $end
$var wire 1 x port__w_data $end
$var wire 1 y port__w_stb $end
$var wire 1 $! _storage $end
$upscope $end
$scope module width $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var string 1 C data $end
$var wire 2 z port__r_data $end
$var wire 2 | port__w_data $end
$var wire 1 } port__w_stb $end
$var string 1 %! _storage $end
$upscope $end
$upscope $end
$scope module RawControl $end
$var wire 1 I r_data $end
$var wire 1 X w_stb $end
$var wire 1 Y w_data $end
$var wire 2 e element__r_data $end
$var wire 1 f element__r_stb $end
$var wire 2 g element__w_data $end
$var wire 1 h element__w_stb $end
$var wire 1 '! port__r_data $end
$var wire 1 (! port__r_stb $end
$var wire 1 )! port__w_data $end
$var wire 1 *! port__w_stb $end
$scope module deselect $end
$var wire 1 X w_stb $end
$var wire 1 Y w_data $end
$var wire 1 )! port__w_data $end
$var wire 1 *! port__w_stb $end
$upscope $end
$scope module ready $end
$var wire 1 I r_data $end
$var wire 1 '! port__r_data $end
$var wire 1 (! port__r_stb $end
$var wire 1 +! r_stb $end
$upscope $end
$upscope $end
$scope module RawRxData $end
$var wire 8 G r_data $end
$var wire 8 m element__r_data $end
$var wire 1 n element__r_stb $end
$var wire 8 1! port__r_data $end
$var wire 1 2! port__r_stb $end
$scope module data $end
$var wire 8 G r_data $end
$var wire 8 1! port__r_data $end
$var wire 1 2! port__r_stb $end
$var wire 1 3! r_stb $end
$upscope $end
$upscope $end
$scope module RawTxData $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 Z w_stb $end
$var wire 8 [ data $end
$var wire 8 i element__r_data $end
$var wire 1 j element__r_stb $end
$var wire 8 k element__w_data $end
$var wire 1 l element__w_stb $end
$var wire 8 ,! port__r_data $end
$var wire 1 -! port__r_stb $end
$var wire 8 .! port__w_data $end
$var wire 1 /! port__w_stb $end
$scope module data$12 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 Z w_stb $end
$var wire 8 [ data $end
$var wire 8 ,! port__r_data $end
$var wire 8 .! port__w_data $end
$var wire 1 /! port__w_stb $end
$var wire 8 0! _storage $end
$upscope $end
$upscope $end
$scope module mux $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 4 \ bus__addr $end
$var wire 8 ] bus__r_data $end
$var wire 1 ^ bus__r_stb $end
$var wire 8 _ bus__w_data $end
$var wire 1 ` bus__w_stb $end
$var wire 5 a element__r_data $end
$var wire 1 b element__r_stb $end
$var wire 5 c element__w_data $end
$var wire 1 d element__w_stb $end
$var wire 2 e element__r_data$10 $end
$var wire 1 f element__r_stb$9 $end
$var wire 2 g element__w_data$25 $end
$var wire 1 h element__w_stb$16 $end
$var wire 8 i element__r_data$12 $end
$var wire 1 j element__r_stb$11 $end
$var wire 8 k element__w_data$26 $end
$var wire 1 l element__w_stb$17 $end
$var wire 8 m element__r_data$14 $end
$var wire 1 n element__r_stb$13 $end
$var wire 1 o r_shadow__0__r_en $end
$var wire 1 p r_shadow__0__w_en $end
$var wire 8 q r_shadow__0__data $end
$var wire 1 r element__w_stb$18 $end
$var wire 1 s w_shadow__0__w_en $end
$var wire 8 t w_shadow__0__data $end
$var wire 8 u element__w_data$27 $end
$upscope $end
$upscope $end
$upscope $end
$scope module phy $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 8 ' i_octets__payload $end
$var wire 8 ( \i_octets__payload.data $end
$var wire 1 ) i_octets__ready $end
$var wire 1 , i_octets__valid $end
$var wire 12 - o_octets__payload $end
$var wire 1 . \o_octets__payload.chip $end
$var string 1 / \o_octets__payload.mode $end
$var wire 8 0 \o_octets__payload.data $end
$var wire 1 6 o_octets__ready $end
$var wire 1 7 o_octets__valid $end
$var string 1 4! command $end
$var wire 2 5! dummy_bytes $end
$var string 1 6! expected_addr_mode $end
$var string 1 7! expected_data_mode $end
$var string 1 8! last_command $end
$var string 1 9! fsm_state $end
$var wire 2 :! address_count $end
$var wire 24 ;! address $end
$var wire 2 <! dummy_count $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
b0 #
b0 $
b0 %
b0 &
b0 '
b0 (
0)
0*
0+
0,
b110011 -
1.
sPutX1 /
b11 0
b110011 1
12
sPutX1 3
b11 4
15
16
17
18
b0 9
b0 :
b0 ;
b0 <
0=
0>
b0 ?
b0 @
0A
0B
sX1 C
sRead D
sPutX1 E
sGetX1 F
b0 G
b0 H
0I
sWait/0 J
0K
1L
1M
0N
b0 O
b0 P
b0 Q
b0 R
b0 S
b0 T
b0 U
b0 V
0W
0X
0Y
0Z
b0 [
b0 \
b0 ]
0^
b0 _
0`
b0 a
0b
b0 c
0d
b0 e
0f
b0 g
0h
b0 i
0j
b0 k
0l
b0 m
0n
0o
0p
b0 q
0r
0s
b0 t
b0 u
0v
0w
0x
0y
b0 z
0{
b0 |
0}
b0 ~
0!!
b0 "!
0#!
0$!
sX1 %!
b0 &!
0'!
0(!
0)!
0*!
0+!
b0 ,!
0-!
b0 .!
0/!
b0 0!
b0 1!
02!
03!
sRead 4!
b0 5!
sPutX1 6!
sGetX1 7!
sRead 8!
sIdle/0 9!
b0 :!
b0 ;!
b0 <!
$end
#10416666
1!
sSPI-Address/2 J
sGet-Address/2 9!
b10 :!
b10 P
b11 1
b0 4
b11 -
b0 0
#20833332
0!
#31249998
1!
b1 :!
b1 P
#41666664
0!
#52083330
1!
b0 :!
b0 P
#62499996
0!
#72916662
1!
sSPI-Data-Read/4 J
sSend-Data/3 9!
b11 :!
b101 1
sGetX1 3
1*
b101 -
sGetX1 /
1)
#83333328
0!
#93749994
1!
1,
b1 ;!
b1 Q
b10101010 '
b10101010 (
1+
b10101010 %
b10101010 &
#104166660
0!
#114583326
1!
b10101010 U
b10 ;!
b10101011 '
b10101011 (
b1 V
b10 Q
b10101011 %
b10101011 &
#124999992
0!
#135416658
1!
b1010101110101010 U
b11 ;!
b10101000 '
b10101000 (
b10 V
b11 Q
b10101000 %
b10101000 &
#145833324
0!
#156249990
1!
b101010001010101110101010 U
b100 ;!
b10101001 '
b10101001 (
b11 V
b100 Q
b10101001 %
b10101001 &
08
07
#166666656
0!
#177083322
1!
sSPI-Deselect/5 J
b10101001101010001010101110101010 U
1W
b0 V
b0 Q
0,
b0 1
02
sDummy 3
0+
18
0*
b0 -
0.
sDummy /
0)
17
0L
0M
b1 O
1L
1M
#187499988
0!
#197916654
1!
sWait/0 J
sIdle/0 9!
0W
b110011 1
12
sPutX1 3
b11 4
b110011 -
1.
sPutX1 /
b11 0
#208333320
0!
#218749986
1!
sSPI-Address/2 J
sGet-Address/2 9!
b10 :!
b10 P
b11 1
b0 4
b11 -
b0 0
#229166652
0!
#239583318
1!
b1 :!
b1 P
#249999984
0!
#260416650
1!
b0 :!
b0 P
b1000011 1
b100 4
b1000011 -
b100 0
#270833316
0!
#281249982
1!
sSPI-Data-Read/4 J
sSend-Data/3 9!
b11 :!
b101 1
sGetX1 3
b0 4
1*
b101 -
sGetX1 /
b0 0
1)
#291666648
0!
#302083314
1!
1,
b101 ;!
b1 Q
b10101110 '
b10101110 (
1+
b10101110 %
b10101110 &
#312499980
0!
#322916646
1!
b10101001101010001010101110101110 U
b110 ;!
b10101111 '
b10101111 (
b1 V
b10 Q
b10101111 %
b10101111 &
#333333312
0!
#343749978
1!
b10101001101010001010111110101110 U
b111 ;!
b10101100 '
b10101100 (
b10 V
b11 Q
b10101100 %
b10101100 &
#354166644
0!
#364583310
1!
b10101001101011001010111110101110 U
b1000 ;!
b10101101 '
b10101101 (
b11 V
b100 Q
b10101101 %
b10101101 &
08
07
#374999976
0!
#385416642
1!
sSPI-Deselect/5 J
b10101101101011001010111110101110 U
1W
b0 V
b0 Q
0,
b0 1
02
sDummy 3
0+
18
0*
b0 -
0.
sDummy /
0)
17
0L
0M
b100 :
b100 9
b100 \
1>
1=
1^
1f
1p
1(!
1+!
#395833308
0!
#406249974
1!
sWait/0 J
sIdle/0 9!
1o
0W
b110011 1
12
sPutX1 3
b11 4
08
b110011 -
1.
sPutX1 /
b11 0
07
0>
0=
0^
0f
0p
0(!
0+!
b0 :
b0 9
b0 \
1B
1A
1`
1s
b1 @
b1 ?
b1 _
#416666640
0!
#427083306
1!
0o
b1 t
1d
b1 u
1y
b1 c
1#!
b1 k
b1 g
1}
b1 .!
1x
0B
0A
0`
0s
#437499972
0!
#447916638
1!
1$!
0d
1K
1v
0y
0#!
0}
b1 a
#458333304
0!
#468749970
1!
sRaw-Wait/1 J
b0 1
02
sDummy 3
b0 4
b0 -
0.
sDummy /
b0 0
1I
1'!
b1 e
#479166636
0!
#489583302
1!
#499999968
0!
#510416634
1!
#520833300
0!
#531249966
1!
#541666632
0!
#552083298
1!
#562499964
0!
#572916630
1!
#583333296
0!
#593749962
1!
#604166628
0!
#614583294
1!
#624999960
0!
#635416626
1!
b100 :
b100 9
b100 \
1>
1=
1^
1f
1p
1(!
1+!
b0 @
b0 ?
b0 _
#645833292
0!
#656249958
1!
1o
b1 q
b1 ]
b1 <
b1 ;
0>
0=
0^
0f
0p
0(!
0+!
b1000 :
b1000 9
b1000 \
1B
1A
1`
1s
b10011111 @
b10011111 ?
b10011111 _
#666666624
0!
#677083290
1!
1l
0o
b10011111 t
b10011111 u
b11111 c
b10011111 k
b11 g
1/!
b0 ]
b11 "!
b10011111 .!
1)!
b11 |
b0 <
1Y
b0 ;
0B
0A
0`
0s
#687499956
0!
#697916622
1!
0l
1Z
b10011111 0!
b10011111 ,!
0/!
b10011111 [
b10011111 i
#708333288
0!
#718749954
1!
sRaw-Data-Write/7 J
0Z
b10011111 R
b100111111111 1
12
sSwap 3
b10011111 4
18
b100111111111 -
1.
sSwap /
b10011111 0
0I
17
0'!
b0 e
#729166620
0!
#739583286
1!
sRaw-Data-Read/8 J
b11111111 '
b11111111 (
b10 :!
sSend-ID/1 9!
sReadID 4!
1,
b0 1
02
sDummy 3
b0 4
1+
08
1*
sReadID 8!
b11111111 %
b11111111 &
sDummy 7!
sDummy 6!
b0 -
0.
sDummy /
b0 0
1)
07
#749999952
0!
#760416618
1!
0,
sRaw-Wait/1 J
b11111111 H
0+
0*
b11111111 G
1I
0)
b11111111 1!
b11111111 m
1'!
b1 e
1B
1A
1`
1s
b11111111 @
b11111111 ?
b11111111 _
#770833284
0!
#781249950
1!
1l
b11111111 t
b11111111 u
1/!
b11111111 k
b11111111 .!
0B
0A
0`
0s
#791666616
0!
#802083282
1!
0l
1Z
b11111111 0!
b11111111 ,!
0/!
b11111111 [
b11111111 i
#812499948
0!
#822916614
1!
sRaw-Data-Write/7 J
0Z
b11111111 R
b111111111111 1
12
sSwap 3
b11111111 4
18
b111111111111 -
1.
sSwap /
b11111111 0
0I
17
0'!
b0 e
#833333280
0!
#843749946
1!
1,
b1 :!
sRaw-Data-Read/8 J
b11101111 '
b11101111 (
b0 1
02
sDummy 3
b0 4
1+
08
1*
b11101111 %
b11101111 &
b0 -
0.
sDummy /
b0 0
1)
07
#854166612
0!
#864583278
1!
0,
sRaw-Wait/1 J
b11101111 H
0+
0*
b11101111 G
1I
0)
b11101111 1!
b11101111 m
1'!
b1 e
b1100 :
b1100 9
b1100 \
1>
1=
1^
1n
1p
12!
13!
b0 @
b0 ?
b0 _
#874999944
0!
#885416610
1!
1o
b11101111 q
b11101111 ]
b11101111 <
b11101111 ;
0>
0=
0^
0n
0p
02!
03!
b1000 :
b1000 9
b1000 \
1B
1A
1`
1s
b11111111 @
b11111111 ?
b11111111 _
#895833276
0!
#906249942
1!
1l
0o
1/!
b0 ]
b0 <
b0 ;
0B
0A
0`
0s
#916666608
0!
#927083274
1!
0l
1Z
0/!
#937499940
0!
#947916606
1!
sRaw-Data-Write/7 J
0Z
b111111111111 1
12
sSwap 3
b11111111 4
18
b111111111111 -
1.
sSwap /
b11111111 0
0I
17
0'!
b0 e
#958333272
0!
#968749938
1!
1,
b0 :!
sRaw-Data-Read/8 J
b1000000 '
b1000000 (
b0 1
02
sDummy 3
b0 4
1+
08
1*
b1000000 %
b1000000 &
b0 -
0.
sDummy /
b0 0
1)
07
#979166604
0!
#989583270
1!
0,
sRaw-Wait/1 J
b1000000 H
0+
0*
b1000000 G
1I
0)
b1000000 1!
b1000000 m
1'!
b1 e
b1100 :
b1100 9
b1100 \
1>
1=
1^
1n
1p
12!
13!
b0 @
b0 ?
b0 _
#999999936
0!
#1010416602
1!
1o
b1000000 q
b1000000 ]
b1000000 <
b1000000 ;
0>
0=
0^
0n
0p
02!
03!
b1000 :
b1000 9
b1000 \
1B
1A
1`
1s
b11111111 @
b11111111 ?
b11111111 _
#1020833268
0!
#1031249934
1!
1l
0o
1/!
b0 ]
b0 <
b0 ;
0B
0A
0`
0s
#1041666600
0!
#1052083266
1!
0l
1Z
0/!
#1062499932
0!
#1072916598
1!
sRaw-Data-Write/7 J
0Z
b111111111111 1
12
sSwap 3
b11111111 4
18
b111111111111 -
1.
sSwap /
b11111111 0
0I
17
0'!
b0 e
#1083333264
0!
#1093749930
1!
1,
b11 :!
sRaw-Data-Read/8 J
b11000 '
b11000 (
b0 1
02
sDummy 3
b0 4
1+
08
1*
b11000 %
b11000 &
b0 -
0.
sDummy /
b0 0
1)
07
#1104166596
0!
#1114583262
1!
0,
sRaw-Wait/1 J
b11000 H
0+
0*
b11000 G
1I
0)
b11000 1!
b11000 m
1'!
b1 e
b1100 :
b1100 9
b1100 \
1>
1=
1^
1n
1p
12!
13!
b0 @
b0 ?
b0 _
#1124999928
0!
#1135416594
1!
1o
b11000 q
b11000 ]
b11000 <
b11000 ;
0>
0=
0^
0n
0p
02!
03!
b0 :
b0 9
b0 \
1B
1A
1`
1s
#1145833260
0!
#1156249926
1!
0o
b0 t
1d
1}
b0 u
1y
b0 c
1#!
b0 k
b0 g
b0 ]
b0 "!
0x
b0 .!
0)!
b0 |
b0 <
0Y
b0 ;
0B
0A
0`
0s
#1166666592
0!
#1177083258
1!
0$!
0d
0K
0v
0y
0#!
0}
b0 a
#1187499924
0!
#1197916590
1!
sSPI-Deselect/5 J
18
0I
17
0'!
b0 e
#1208333256
0!
#1218749922
1!
sWait/0 J
sIdle/0 9!
b110011 1
12
sPutX1 3
b11 4
08
b110011 -
1.
sPutX1 /
b11 0
07
#1229166588
0!
#1239583254
1!
#1249999920
0!
#1260416586
1!
#1270833252
0!
#1281249918
1!
#1291666584
0!
#1302083250
1!
#1312499916
0!
#1322916582
1!
#1333333248
0!
#1343749914
1!
#1354166580
0!
#1364583246
1!
b100 :
b100 9
b100 \
1>
1=
1^
1f
1p
1(!
1+!
#1374999912
0!
#1385416578
1!
1o
b0 q
0>
0=
0^
0f
0p
0(!
0+!
1L
1M
18
17
#1395833244
0!
#1406249910
1!
sSPI-Address/2 J
b10 :!
0o
sGet-Address/2 9!
sRead 4!
b10 P
b11 1
b0 4
sRead 8!
sGetX1 7!
sPutX1 6!
b11 -
b0 0
#1416666576
0!
#1427083242
1!
b1 :!
b1 P
#1437499908
0!
#1447916574
1!
b0 :!
b0 P
b1000011 1
b100 4
b1000011 -
b100 0
#1458333240
0!
#1468749906
1!
sSPI-Data-Read/4 J
sSend-Data/3 9!
b11 :!
b100 ;!
b101 1
sGetX1 3
b0 4
1*
b101 -
sGetX1 /
b0 0
1)
#1479166572
0!
#1489583238
1!
1,
b101 ;!
b1 Q
b10101110 '
b10101110 (
1+
b10101110 %
b10101110 &
#1499999904
0!
#1510416570
1!
b1 V
b110 ;!
b10 Q
b10101111 '
b10101111 (
b10101111 %
b10101111 &
#1520833236
0!
#1531249902
1!
b10 V
b111 ;!
b11 Q
b10101100 '
b10101100 (
b10101100 %
b10101100 &
#1541666568
0!
#1552083234
1!
b11 V
b1000 ;!
b100 Q
b10101101 '
b10101101 (
b10101101 %
b10101101 &
08
07
#1562499900
0!
#1572916566
1!
sSPI-Deselect/5 J
1W
b0 V
b0 Q
0,
b0 1
02
sDummy 3
0+
18
0*
b0 -
0.
sDummy /
0)
17
0L
0M
b0 :
b0 9
b0 \
1B
1A
1`
1s
b1010 @
b1010 ?
b1010 _
#1583333232
0!
#1593749898
1!
sWait/0 J
0W
1d
sIdle/0 9!
b1010 t
b110011 1
12
sPutX1 3
b11 4
08
b1010 u
1y
b1010 c
1#!
b1010 k
b10 g
1}
b1 "!
b110011 -
1.
sPutX1 /
b11 0
b1010 .!
1)!
07
b1 |
1Y
0B
0A
0`
0s
#1604166564
0!
#1614583230
1!
0d
sX1Fast %!
b1 &!
b1 S
0y
0#!
sX1Fast C
b1 ~
b1 z
0}
sFastRead D
b1010 a
b10110011 1
b1011 4
b10110011 -
b1011 0
1L
1M
18
17
#1624999896
0!
#1635416562
1!
sSPI-Address/2 J
b10 :!
sGet-Address/2 9!
sFastRead 4!
b10 P
b11 1
b0 4
sFastRead 8!
b1 5!
b11 -
b0 0
#1645833228
0!
#1656249894
1!
b1 :!
b1 P
#1666666560
0!
#1677083226
1!
b0 :!
b0 P
b1000011 1
b100 4
b1000011 -
b100 0
#1687499892
0!
#1697916558
1!
sSPI-Dummy-Bytes/3 J
sGet-Dummy/4 9!
b11 :!
b100 ;!
b111111110011 1
b11111111 4
b111111110011 -
b11111111 0
#1708333224
0!
#1718749890
1!
sSPI-Data-Read/4 J
sSend-Data/3 9!
b11 <!
b101 1
sGetX1 3
b0 4
1*
b101 -
sGetX1 /
b0 0
1)
#1729166556
0!
#1739583222
1!
1,
b101 ;!
b1 Q
b10101110 '
b10101110 (
1+
b10101110 %
b10101110 &
#1749999888
0!
#1760416554
1!
b1 V
b110 ;!
b10 Q
b10101111 '
b10101111 (
b10101111 %
b10101111 &
#1770833220
0!
#1781249886
1!
b10 V
b111 ;!
b11 Q
b10101100 '
b10101100 (
b10101100 %
b10101100 &
#1791666552
0!
#1802083218
1!
b11 V
b1000 ;!
b100 Q
b10101101 '
b10101101 (
b10101101 %
b10101101 &
08
07
#1812499884
0!
#1822916550
1!
sSPI-Deselect/5 J
1W
b0 V
b0 Q
0,
b0 1
02
sDummy 3
0+
18
0*
b0 -
0.
sDummy /
0)
17
0L
0M
#1833333216
